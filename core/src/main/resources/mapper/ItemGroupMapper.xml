<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.triplan.mapper.ItemGroupMapper">

    <insert id="insert" useGeneratedKeys="true" keyProperty="itemGroupId">
        INSERT INTO item_group (
            name,
            summary_explain,
            detail_explain,
            item_category,
            address,
            address_detail,
            item_img,
            detail_img,
            location,
            lat,
            lng,
            seller_id
        ) VALUES (
            #{name},
            #{summaryExplain},
            #{detailExplain},
            #{itemCategory},
            #{address},
            #{addressDetail},
            #{itemImg},
            #{detailImg},
            #{location},
            #{lat},
            #{lng},
            #{sellerId}
        )
    </insert>

    <select id="select" resultType="ItemGroupVO">
        SELECT  *
        FROM    item_group
        WHERE   item_group_id = #{itemGroupId}

    </select>

    <update id="update">
        UPDATE  item_group
           SET
                name            = IFNULL(   #{name},            name                ),
                summary_explain = IFNULL(   #{summaryExplain},  summary_explain     ),
                detail_explain  = IFNULL(   #{detailExplain},   detail_explain      ),
                item_category   = IFNULL(   #{itemCategory},    item_category       ),
                address         = IFNULL(   #{address},         address             ),
                address_detail  = IFNULL(   #{addressDetail},   address_detail      ),
                item_img        = IFNULL(   #{itemImg},         item_img            ),
                detail_img      = IFNULL(   #{detailImg},       detail_img          ),
                location        = IFNULL(   #{location},        location            ),
                like_count      = IFNULL(   #{like_count},      like_count          ),
                lat             = IFNULL(   #{lat},             lat                 ),
                lng             = IFNULL(   #{lng},             lng                 ),
                updated_at      = CURRENT_TIMESTAMP <!-- BaseVO를 상속 받은 테이블에 들어가는 공통 구문 -->
         WHERE
                item_group_id = #{itemGroupId}
    </update>

    <delete id="delete">
        DELETE
        FROM    item_group
        WHERE   item_group_id = ${itemGroupId}
    </delete>

    <select id="getItemGroupByItemGroupId" resultType="ItemGroupVO">
        SELECT *
          FROM item_group
         WHERE item_group_id = #{itemGroupId}
    </select>

    <select id="selectAll" parameterType="list" resultType="ItemGroupVO">
        SELECT *
          FROM item_group
         WHERE item_group_id
            IN
        <foreach collection="list" item="itemGroup" separator="," open="(" close=")">
        #{itemGroup.itemGroupId}
    </foreach>
        ORDER BY item_group_id ASC
    </select>

    <select id="getItemGroupBySellerId" resultType="ItemGroupVO">
        SELECT *
        FROM item_group
        WHERE seller_id = #{sellerId}
        ORDER BY created_at DESC
        LIMIT (#{currentPage} - 1) * #{pageSize}, #{pageSize}
    </select>

    <select id="count" resultType="Integer">
        SELECT count(*)
          FROM item_group
         WHERE item_group_id IN ( SELECT item_group_id
                                  FROM   item_group
                                  WHERE  seller_id = #{sellerId})
    </select>

    <select id="selectByItemId" resultType="ItemGroupVO">
        SELECT  *
        FROM    item_group
        WHERE   item_group_id = (
                SELECT  item_group_id
                FROM    item
                WHERE   item_id = #{item_id}
        )
    </select>

    <select id="selectAllSort" resultType="ItemGroupVO">
        SELECT *
        FROM item_group
        WHERE item_group_id
        IN
        <foreach collection="itemGroupId" item="item" separator="," open="(" close=")">
            #{item.itemGroupId}
        </foreach>
        <choose>
            <when test='sortType.equals("wish")'>
                ORDER BY like_count DESC
            </when>
            <when test='sortType.equals("review")'>
                ORDER BY review_count DESC
            </when>
        </choose>
    </select>

</mapper>